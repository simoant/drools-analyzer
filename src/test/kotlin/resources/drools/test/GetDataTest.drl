package drools.test
import com.github.simoant.drools.analyzer.*
import com.github.simoant.drools.analyzer.utils.*
import com.github.simoant.drools.analyzer.model.DataRequest
import com.github.simoant.drools.analyzer.model.AnalyzerResponse
import com.github.simoant.drools.analyzer.model.AnalyzerResult
dialect "java"

global Logger logger;

rule FirstRule
when
    $obj: TestInput($value: value)
then
    DataRequest dr = new DataRequest("first", "first request", true, false);
    logger.log("First rule");
    insertLogical(dr);
 end

rule SecondRule
when
    $obj: FirstTestObject()
then
    DataRequest dr2 = new DataRequest("second", "first request", true, false);
    insert(new TestDecision1());
    insert(new TestDecision1());
    insert(new TestDecision1());
    insert(new TestDecision1());
    insert(new TestDecision1());
    insert(new TestDecision1());
    insert(new TestDecision2());
    insertLogical(dr2);
    logger.log("Second rule");
 end

rule ThirdRule
when
    $obj: SecondTestObject()
    $inter: TestDecision1()
    exists(TestDecision2())
then
    retract($inter);
    AnalyzerResult ar = new AnalyzerResult("response");
    insert(ar);
    logger.log("Third rule");
 end